## 1.4.0 Release [2021-12-14]
1. 배열 타입 추가. 지원 타입은 (int, string, double, bool, enum)을 지원.
 - 배열의 값 구분은 쉽표(,)로 구분하도록 되어 있습니다.

2. 사용방법은 sample.xlsx 파일을 참조.


## 1.3.0 Release [2021-12-08]
1. Json 파일의 인코딩 Unicode -> Utf-8 로 변경

2. 엑셀 파일을 여러개 로드할 경우 CSharp 파일 생성시 BaseMasterDataManager.cs 가 잘못 생성 되는 문제가 있었습니다. 다수의 파일을 로드할 경우에도 1개의 BaseMasterDataManager.cs만 생성되어 클래스 로드에 문제가 없도록 수정하였습니다.


## 0.2.1 Release [2018-01-10]

1. 도움말 기능을 추가하였습니다. (옵션 : -h/-help)

2. -o <output_directory> 옵션을 추가했습니다. 기존에 -o 옵션없이 output_directory를 사용하였으나, 이제부터는 -o 옵션을 사용해야만 output_directory를 사용할 수 있습니다.
기존 : -d/-f <input_dir/input_file> <output_dir> 형식으로 사용하였음.
변경 : -d/-f <input_dir/input_file> -o <output_dir> 방법으로 사용해야 함.

3. 옵션의 순서에 상관없이 명령줄을 추가할 수 있습니다. 
ex) -d/-f <input_dir/input_file> -o <output_dir> or -o <output_dir> -d/-f <input_dir/input_file> 모두 사용 가능

4. 엑셀 시트의 기능 추가
1) 1번 행 : 키의 간단 명칭 및 설명(주석에 사용)
2) 2번 행 : C#파일에서 사용할 변수의 데이터 타입 (int, string, bool 의 3가지 타입만 사용 가능.)
3) 3번 행 : 기존의 Json 키 값을 입력. (C# 파일에서 변수명으로 사용됨)
4) 3번 행의 셀에 메모를 삽입할 수 있습니다.(C# 파일의 변수명에 주석으로 사용.)

4. C#(CSharp) 파일을 자동생성 해주는 기능 추가 (옵션 : -cs <output_dir>)
ex) -d <input_dir> -o <output_dir> -cs <csharp_output_dir>
*.cs 파일은 시트이름으로 생성됨
엑셀 파일에 정의되어 있는 데이터 타입으로 변수를 선언하고, 초기화 합니다.

5. 변환하지 않는 시트 설정 가능. (시트이름에 !을 추가하면 해당 시트는 Json으로 변환하지 않는다.)
ex) 로직시트-> !로직시트
위와 같은 방법으로 시트이름에 ! 문자를 추가해주면 해당 시트는 변환에서 제외한다.

6. enum 타입 추가
enum 타입이 필요한 경우가 있음. enum 타입의 경우 json 데이터에서는 int 형식으로 저장됨.
C# 파일이 생성될 때 enum 타입 및 초기값으로 설정해준다.
ex) C# 파일에 선언되어 있는 enum 
	public enum SEX_TYPE
	{
		NONE = 0,
		MALE,
		FEMALE,
		UNI_SEX
	}
	위와 같이 선언되어 있다면, 엑셀의 데이터 타입을 입력하는 셀에 enum:SEX_TYPE:NONE 으로 입력
	① enum : enum 타입을 사용하겠다는 선언
	② SEX_TYPE : C# 파일에 참조 가능한 enum의 타입명을 입력해 준다.
	③ NONE : 변수를 초기화 시킬 때 사용. 실제 enum에 선언되어 있는 값을 입력해준다.(대소문자 구분)
	④ 구분자는 : 으로 구분한다.

## 0.0.2 Release	[2018-01-09]
1. [~$] 엑셀 파일을 열고 있을 때 생성되는 백업 파일을 읽지 않도록 수정. 엑셀 파일이 열려 있어도 변환이 가능합니다.


## 0.0.1 Release 	[2018-01-05]
1. *.xslx 파일을 json으로 변환하는 기능
2. 시트명이 Json 파일의 명으로 적용
3. 디렉토리 전체를 변환하는 방식과 파일 하나만을 변환하는 방식으로 구현
